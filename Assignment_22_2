import org.apache.spark._
import org.apache.spark.streaming._
import org.apache.spark.streaming.StreamingContext._

val ssc = new StreamingContext(sc,Seconds(5))

ssc.checkpoint(".")

val lines = ssc.socketTextStream("localhost",9999)
val words = lines.flatMap(_.split(" "))
val worDstream = words.map(word =>(word,1))

val initialRDD = ssc.sparkContext.parallelize(List[(String,Int)]())

val mappingFunc = (word : String , one : Option[Int] , state : State[Int]) =>{
   val sum = one.getOrElse(0) + state.getOption.getOrElse(0)
   val output = (word,sum)
   state.update(sum)
   output
}

val stateDstream = worDstream.mapWithState(StateSpec.function(mappingFunc).initialState(initialRDD))

stateDstream.print()

ssc.start()
ssc.awaitTermination()

